// <auto-generated />
using System;
using FSH.Starter.AdjdDashboard.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FSH.Starter.WebApi.Migrations.MSSQL.AdjdDashboard
{
    [DbContext(typeof(AdjdDashboardDbContext))]
    [Migration("20250612074435_Seed AdjdDashboard Data")]
    partial class SeedAdjdDashboardData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("adjd")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdAlert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlertType")
                        .HasColumnType("int");

                    b.Property<Guid?>("CameraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("DismissedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("RelatedEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResolutionNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolvedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AlertType");

                    b.HasIndex("CameraId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RelatedEventId");

                    b.HasIndex("Status", "GeneratedAt");

                    b.ToTable("Alerts", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdAlertConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AfterHoursPriority")
                        .HasColumnType("int");

                    b.Property<int>("AlertType")
                        .HasColumnType("int");

                    b.Property<int>("AutoResolveAfterMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("AutoResolveEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DashboardNotificationEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DifferentBehaviorAfterHours")
                        .HasColumnType("bit");

                    b.Property<bool>("EmailNotificationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("EscalationEmailList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscalationTimeoutMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SmsNotificationEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AlertConfigurations", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CameraType")
                        .HasColumnType("int");

                    b.Property<string>("CoverageArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("FloorPlanX")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("FloorPlanY")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("FlowDirection")
                        .HasColumnType("int");

                    b.Property<bool>("IsAwayAlertEligible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NeoFaceCameraId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("OperationalHoursEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("OperationalHoursStart")
                        .HasColumnType("time");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NeoFaceCameraId")
                        .IsUnique();

                    b.ToTable("Cameras", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdCameraConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CalibrationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EnableAwayAlerts")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableDoubleCountingAlerts")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableEventLogging")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableImageCapture")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMissingEventAlerts")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableRealTimeProcessing")
                        .HasColumnType("bit");

                    b.Property<int>("EventProcessingDelayMs")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastCalibrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxEventsPerMinute")
                        .HasColumnType("int");

                    b.Property<decimal>("MinConfidenceThreshold")
                        .HasPrecision(5, 3)
                        .HasColumnType("decimal(5,3)");

                    b.Property<decimal>("MinFaceQualityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinFrontalFaceScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CameraId")
                        .IsUnique();

                    b.ToTable("CameraConfigurations", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdDailyCounter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayAlerts")
                        .HasColumnType("int");

                    b.Property<DateTime>("CounterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentPresent")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DoubleEntryAlerts")
                        .HasColumnType("int");

                    b.Property<int>("DoubleExitAlerts")
                        .HasColumnType("int");

                    b.Property<bool>("IsResetComplete")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastResetAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MissingEntryAlerts")
                        .HasColumnType("int");

                    b.Property<int>("MissingExitAlerts")
                        .HasColumnType("int");

                    b.Property<int>("PeakPresent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PeakTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalEntries")
                        .HasColumnType("int");

                    b.Property<int>("TotalExits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CounterDate")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("DailyCounters", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NeoFacePersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("PrimaryLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WorkScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.HasIndex("NeoFacePersonId")
                        .IsUnique();

                    b.HasIndex("PrimaryLocationId");

                    b.HasIndex("WorkScheduleId");

                    b.ToTable("Employees", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdEmployeeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ConfidenceScore")
                        .HasPrecision(5, 3)
                        .HasColumnType("decimal(5,3)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("EventImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NeoFaceEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsProcessed");

                    b.HasIndex("CameraId", "EventTime");

                    b.HasIndex("EmployeeId", "EventTime");

                    b.ToTable("EmployeeEvents", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FloorPlanContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorPlanFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FloorPlanImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Zone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locations", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdReportConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultExportFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmailRecipients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludeCharts")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeImages")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScheduled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetainReportsForDays")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleCron")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportConfigurations", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdSystemConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConfigType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConfigKey")
                        .IsUnique();

                    b.ToTable("SystemConfigurations", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdWatchList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowMultipleEntries")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowMultipleExits")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyRulesOnHolidays")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyRulesOnWeekends")
                        .HasColumnType("bit");

                    b.Property<int>("AwayAlertDurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("BreakPeriodsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BreakTimeFlexibilityMinutes")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DoubleCountWindowMinutes")
                        .HasColumnType("int");

                    b.Property<int>("GracePeriodMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MissingEventTimeoutMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NeoFaceWatchListId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftChangeWindowMinutes")
                        .HasColumnType("int");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("WorkingHoursEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("WorkingHoursStart")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("WatchLists", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdWorkSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowWorkFromHome")
                        .HasColumnType("bit");

                    b.Property<int>("CoreHoursRequired")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan?>("FlexibleStartEarliest")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("FlexibleStartLatest")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFlexibleHours")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan?>("ShiftEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ShiftStart")
                        .HasColumnType("time");

                    b.Property<Guid>("WatchListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkFromHomeDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WatchListId");

                    b.ToTable("WorkSchedules", "adjd");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdAlert", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdEmployee", "Employee")
                        .WithMany("Alerts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdEmployeeEvent", "RelatedEvent")
                        .WithMany()
                        .HasForeignKey("RelatedEventId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Camera");

                    b.Navigation("Employee");

                    b.Navigation("RelatedEvent");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdLocation", "Location")
                        .WithMany("Cameras")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdCameraConfiguration", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", "Camera")
                        .WithOne("Configuration")
                        .HasForeignKey("FSH.Starter.AdjdDashboard.Domain.AdjdCameraConfiguration", "CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdDailyCounter", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdEmployee", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdLocation", "PrimaryLocation")
                        .WithMany("Employees")
                        .HasForeignKey("PrimaryLocationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdWorkSchedule", "WorkSchedule")
                        .WithMany("Employees")
                        .HasForeignKey("WorkScheduleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PrimaryLocation");

                    b.Navigation("WorkSchedule");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdEmployeeEvent", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", "Camera")
                        .WithMany("Events")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdEmployee", "Employee")
                        .WithMany("Events")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdWorkSchedule", b =>
                {
                    b.HasOne("FSH.Starter.AdjdDashboard.Domain.AdjdWatchList", "WatchList")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("WatchListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdCamera", b =>
                {
                    b.Navigation("Configuration");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdEmployee", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdLocation", b =>
                {
                    b.Navigation("Cameras");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdWatchList", b =>
                {
                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("FSH.Starter.AdjdDashboard.Domain.AdjdWorkSchedule", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
